"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
üìå –î–æ–±–∞–≤—å—Ç–µ –≤ –º–æ–¥—É–ª—å —Å –∑–∞–≥–∞–¥–∫–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (—Ç–µ–∫—Å—Ç –∑–∞–≥–∞–¥–∫–∏) –∏ —á–∏—Å–ª–æ (–Ω–æ–º–µ—Ä
–ø–æ–ø—ã—Ç–∫–∏, —Å –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∞ —É–≥–∞–¥–∞–Ω–∞).
üìå –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—Ç–≥–∞–¥—ã–≤–∞–Ω–∏—è.
üìå –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è.
üìå –û—Ç–¥–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
—É–≥–∞–¥—ã–≤–∞–Ω–∏—è –∏–∑ –∑–∞—â–∏—â—ë–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —á—Ç–µ–Ω–∏—è –≤–∏–¥–µ.
üìå –î–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
"""

dct = {"–í —á–µ–º —Å–∏–ª–∞: ": ['–≤ –ø—Ä–∞–≤–¥–µ', '–≤ –¥–µ–Ω—å–≥–∞—Ö', '–≤ —Å–∏–ª–µ'],
       "–ù–µ –ª–∞–µ—Ç, –Ω–µ –∫—É—Å–∞–µ—Ç, –≤ –¥–æ–º –Ω–µ –ø—É—Å–∫–∞–µ—Ç": ['–∑–∞–º–æ–∫', '–æ—Ö—Ä–∞–Ω–Ω–∏–∫', '—Å–æ–±–∞–∫–∞']}

_dict = {}  # –∑–∞—â–∏—â–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å


# def some_func(qw, count):
#     print(qw)
#     answer = ['–≤ –ø—Ä–∞–≤–¥–µ', '–≤ –¥–µ–Ω—å–≥–∞—Ö', '–≤ —Å–∏–ª–µ']
#     tries = 0
#     while tries < count:
#         variant = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç: ')
#         if variant in answer:
#             _dict['–í—ã —É–≥–∞–¥–∞–ª–∏'] = tries + 1
#             return
#         else:
#             _dict['–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏'] = tries + 1
#             tries += 1


def some_func(qw, count):  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ 5 –æ–π
    _dict[qw] = count


def puzzle_print():
    for k, v in _dict.items():  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ 5 –æ–π
        print(f'–ó–∞–≥–∞–¥–∫—É: {k}' + (f'—É–≥–∞–¥–∞–ª–∏ —Å –ø–æ–ø—ã—Ç–∫–∏ {v}' if v else ' –Ω–µ —É–≥–∞–¥–∞–ª–∏'))
