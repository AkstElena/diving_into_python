"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ 3 –∏ 4. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
üìå –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –∑–∞–¥–∞–Ω–∏—è 4)
üìå –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É - —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ
–º–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
–¥–æ—Å—Ç—É–ø–∞. –ê –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
üìå –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω—å—à–µ, —á–µ–º –≤–∞—à —É—Ä–æ–≤–µ–Ω—å, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
–¥–æ—Å—Ç—É–ø–∞.
"""
from seminar.seminar_8.task_2_1 import enter_name
from task_4 import User, users_set
from task_3 import LevelError, AccessError

FILE_NAME = 'users.json'
LEVEL_EXAM = 5
MIN_LEVEL = 1
MAX_LEVEL = 7


def enter_in_sys():
    enter_name = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ').capitalize()
    enter_id_user = input('–í–≤–µ–¥–∏—Ç–µ id: ')
    user_set = users_set(FILE_NAME)
    for user in user_set:
        if user.id_user == enter_id_user and user.name == enter_name:
            print(f'–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {enter_name} —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ {user.level}')
            break
    else:
        raise AccessError(enter_id_user, enter_name)


def add_user():
    name = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è (ENTER –¥–ª—è –≤—ã—Ö–æ–¥–∞): ').capitalize()
    user_id = input('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ')
    if not user_id.isdigit():
        return print('ID –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä')
    level = input(f'–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ ({MIN_LEVEL}-{MAX_LEVEL}): ')
    if not (level.isdigit() and MIN_LEVEL <= int(level) <= MAX_LEVEL):
        return print(f'–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç {MIN_LEVEL} –¥–æ {MAX_LEVEL}!')
    if int(level) >= LEVEL_EXAM:
        user = User(user_id, name, level)
        print(user)
        return user
    else:
        raise LevelError(level, LEVEL_EXAM)


# enter_in_sys()
add_user()